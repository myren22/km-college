#BlueJ class context
comment0.params=expected\ result
comment0.target=void\ assertPassengersEquals(Person[],\ Person[])
comment0.text=\r\n\ This\ method\ receives\ 2\ arrays\ of\ Person\ objects,\ named\ expected\ and\ result,\r\n\ and\ checks\ that\ both\ arrays\ hold\ the\ exact\ persons\ --\ where\ a\ person\ is\ \r\n\ considered\ equal\ to\ another\ if\ they\ have\ the\ same\ name\ and\ age.\r\n\ Index\ location\ is\ not\ significant.\ This\ means\ that\ a\ person\ in\ expected\r\n\ can\ be\ found\ in\ a\ different\ index\ location\ in\ result.\ \ \r\n\ @param\ expected\ Expected\ array\ of\ persons.\r\n\ @param\ result\ Actual\ result\ to\ verify.\r\n
comment1.params=
comment1.target=void\ setUp()
comment1.text=\r\n\ This\ method\ initializes\ any\ variables\ needed\ in\r\n\ each\ and\ all\ tests.\ In\ particular,\ it\ initializes\r\n\ an\ array\ of\ Person\ objects\ used\ in\ tests.\r\n
comment10.params=
comment10.target=void\ testGetPassengers03()
comment10.text=\r\n\ Tests\ that\ passengers\ can\ be\ retrieved.\r\n\ Test\ 3)\ one\ passenger\ when\ adding\ a\ duplicated\ passenger\r\n
comment11.params=
comment11.target=void\ testGetPassengers04()
comment11.text=\r\n\ Tests\ that\ passengers\ can\ be\ retrieved.\r\n\ Tests\ 4)\ gets\ passengers\ added\ up\ to\ capacity\r\n
comment12.params=
comment12.target=void\ testGetPassengers05()
comment12.text=\r\n\ Tests\ that\ passengers\ can\ be\ retrieved.\r\n\ Test\ 5)\ gets\ passengers\ added\ beyond\ capacity\r\n
comment13.params=
comment13.target=void\ testGetPassengers06()
comment13.text=\r\n\ Tests\ that\ passengers\ can\ be\ retrieved.\r\n\ Test\ 6)\ deletes\ list\ of\ retrieved\ passengers\ \r\n\ \ \ \ \ \ without\ affecting\ the\ list\ in\ the\ car.\r\n
comment14.params=
comment14.target=void\ testRemovePassenger01()
comment14.text=\r\n\ Tests\ that\ passengers\ can\ be\ removed\ from\ a\ car.\r\n\ Test\ 1)\ removing\ a\ "null"\ passenger\ when\ none\ exist\ [fails]\r\n
comment15.params=
comment15.target=void\ testRemovePassenger02()
comment15.text=\r\n\ Tests\ that\ passengers\ can\ be\ removed\ from\ a\ car.\r\n\ Test\ 2)\ removing\ a\ "null"\ passenger\ when\ one\ exists\ [fails]\r\n
comment16.params=
comment16.target=void\ testRemovePassenger03()
comment16.text=\r\n\ Tests\ that\ passengers\ can\ be\ removed\ from\ a\ car.\r\n\ Test\ 3)\ removing\ a\ non-existing\ passenger\ when\ empty\ [fails]\r\n
comment17.params=
comment17.target=void\ testRemovePassenger04()
comment17.text=\r\n\ Tests\ that\ passengers\ can\ be\ removed\ from\ a\ car.\r\n\ Test\ 4)\ removing\ a\ non-existing\ passenger\ when\ not\ empty\ [fails]\r\n
comment18.params=
comment18.target=void\ testRemovePassenger05()
comment18.text=\r\n\ Tests\ that\ passengers\ can\ be\ removed\ from\ a\ car.\r\n\ Test\ 5)\ removing\ the\ only\ passenger\r\n
comment19.params=
comment19.target=void\ testRemovePassenger06()
comment19.text=\r\n\ Tests\ that\ passengers\ can\ be\ removed\ from\ a\ car.\r\n\ Test\ 6)\ removing\ all\ passengers\r\n
comment2.params=
comment2.target=void\ testNewDefaultCarCapacityOcuppancyDriverPassengers()
comment2.text=\r\n\ Tests\ the\ initial\ capacity\ of\ a\ default\ car.\r\n
comment20.params=
comment20.target=void\ testRemovePassenger07()
comment20.text=\r\n\ Tests\ that\ passengers\ can\ be\ removed\ from\ a\ car.\r\n\ Test\ 7)\ removing\ half,\ adding\ to\ full,\ removing\ all\r\n
comment21.params=
comment21.target=void\ testGetOccupancy01()
comment21.text=\r\n\ Tests\ that\ passengers\ can\ be\ counted.\r\n\ Test\ 1)\ no\ passengers\ when\ adding\ a\ "null"\ passenger\r\n
comment22.params=
comment22.target=void\ testGetOccupancy02()
comment22.text=\r\n\ Tests\ that\ passengers\ can\ be\ counted.\r\n\ Test\ 2)\ one\ passenger\ when\ adding\ one\ passenger\ when\ empty\r\n
comment23.params=
comment23.target=void\ testGetOccupancy03()
comment23.text=\r\n\ Tests\ that\ passengers\ can\ be\ counted.\r\n\ Test\ 3)\ one\ passenger\ when\ adding\ a\ duplicated\ passenger\r\n
comment24.params=
comment24.target=void\ testGetOccupancy04()
comment24.text=\r\n\ Tests\ that\ passengers\ can\ be\ counted.\r\n\ Test\ 4)\ checking\ occupancy\ while\ adding\ passengers\ up\ to\ capacity\r\n
comment25.params=
comment25.target=void\ testGetOccupancy05()
comment25.text=\r\n\ Tests\ that\ passengers\ can\ be\ counted.\r\n\ Test\ 5)\ checking\ occupancy\ after\ adding\ passengers\ beyond\ capacity\r\n
comment26.params=
comment26.target=void\ testGetOccupancy06()
comment26.text=\r\n\ Tests\ that\ passengers\ can\ be\ counted.\r\n\ Test\ 6)\ checking\ occupancy\ while\ removing\ all\ passengers\r\n
comment27.params=
comment27.target=void\ testGetOccupancy07()
comment27.text=\r\n\ Tests\ that\ passengers\ can\ be\ counted.\r\n\ Test\ 7)\ checking\ occupancy\ after\ removing\ more\ than\ existing\ passengers\r\n
comment28.params=
comment28.target=void\ testHasRoom()
comment28.text=\r\n\ Tests\ whether\ the\ car\ is\ full.\r\n\ Tests\ are\ made\ when\ adding\ and\ removing\ passengers\r\n
comment29.params=
comment29.target=void\ testSetDriver01()
comment29.text=\r\n\ Tests\ whether\ a\ driver\ can\ be\ assigned.\r\n\ Test\ 1)\ adding\ an\ "null"\ driver\ [fails]\r\n
comment3.params=
comment3.target=void\ testNewCarCapacityOcuppancyDriverPassengers()
comment3.text=\r\n\ Tests\ the\ initial\ capacity\ of\ cars.\r\n\ Cars\ should\ be\ created\ with\ capacities\ in\ the\ range\r\n\ MIN_CAPACITY\ and\ MAX_CAPACITY\ only.\r\n
comment30.params=
comment30.target=void\ testSetDriver02()
comment30.text=\r\n\ Tests\ whether\ a\ driver\ can\ be\ assigned.\r\n\ Test\ 2)\ adding\ an\ under-age\ driver\ when\ not\ full\ [fails]\r\n
comment31.params=
comment31.target=void\ testSetDriver03()
comment31.text=\r\n\ Tests\ whether\ a\ driver\ can\ be\ assigned.\r\n\ Test\ 3)\ adding\ a\ legal-age\ driver\ when\ not\ full\ and\ a\ driver\ exists\r\n
comment32.params=
comment32.target=void\ testSetDriver04()
comment32.text=\r\n\ Tests\ whether\ a\ driver\ can\ be\ assigned.\r\n\ Test\ 4)\ adding\ a\ legal-age\ driver\ when\ full\ and\ a\ driver\ exists\ [fails]\r\n
comment33.params=
comment33.target=void\ testSetDriver05()
comment33.text=\r\n\ Tests\ whether\ a\ driver\ can\ be\ assigned.\r\n\ Test\ 5)\ selecting\ an\ under-age\ passenger\ as\ driver\ [fails]\r\n
comment34.params=
comment34.target=void\ testSetDriver06()
comment34.text=\r\n\ Tests\ whether\ a\ driver\ can\ be\ assigned.\r\n\ Test\ 6)\ selecting\ a\ legal-age\ passenger\ as\ driver\ when\ full\ and\ a\ \r\n\ \ \ \ \ \ driver\ exists\r\n
comment35.params=
comment35.target=void\ testSetDriver07()
comment35.text=\r\n\ Tests\ whether\ a\ driver\ can\ be\ assigned.\r\n\ Test\ 7)\ removing\ driver\r\n
comment36.params=
comment36.target=void\ testHasPassenger01()
comment36.text=\r\n\ Testing\ whether\ a\ passenger\ is\ in\ the\ car.\r\n\ Test\ 1)\ a\ "null"\ passenger\r\n
comment37.params=
comment37.target=void\ testHasPassenger02()
comment37.text=\r\n\ Testing\ whether\ a\ passenger\ is\ in\ the\ car.\r\n\ Test\ 2)\ a\ non-existing\ passenger\ when\ empty\r\n
comment38.params=
comment38.target=void\ testHasPassenger03()
comment38.text=\r\n\ Testing\ whether\ a\ passenger\ is\ in\ the\ car.\r\n\ Test\ 3)\ a\ non-existing\ passenger\ when\ full\r\n
comment39.params=
comment39.target=void\ testHasPassenger04()
comment39.text=\r\n\ Testing\ whether\ a\ passenger\ is\ in\ the\ car.\r\n\ Test\ 4)\ an\ existing\ passenger\r\n
comment4.params=
comment4.target=void\ testAddPassenger01()
comment4.text=\r\n\ Tests\ adding\ passengers\ into\ default\ and\ custom\ capacity\ cars.\r\n\ Test\ 1)\ adding\ a\ "null"\ passenger\ [fails]\r\n
comment40.params=
comment40.target=void\ testCanDrive01()
comment40.text=\r\n\ Testing\ whether\ a\ person\ is\ of\ driving\ age.\r\n\ Test\ 1)\ a\ "null"\ person\ [fails]\r\n
comment41.params=
comment41.target=void\ testCanDrive02()
comment41.text=\r\n\ Testing\ whether\ a\ person\ is\ of\ driving\ age.\r\n\ Test\ 2)\ an\ under-age\ person\ [fails]\r\n
comment42.params=
comment42.target=void\ testCanDrive03()
comment42.text=\r\n\ Testing\ whether\ a\ person\ is\ of\ driving\ age.\r\n\ Test\ 3)\ a\ legal-age\ person\r\n
comment5.params=
comment5.target=void\ testAddPassenger02()
comment5.text=\r\n\ Tests\ adding\ passengers\ into\ default\ and\ custom\ capacity\ cars.\r\n\ Test\ 2)\ adding\ one\ passenger\ when\ empty\r\n
comment6.params=
comment6.target=void\ testAddPassenger03()
comment6.text=\r\n\ Tests\ adding\ passengers\ into\ default\ and\ custom\ capacity\ cars.\r\n\ Test\ 3)\ adding\ a\ duplicated\ passenger\ [fails]\r\n
comment7.params=
comment7.target=void\ testAddPassenger05()
comment7.text=\r\n\ Tests\ adding\ passengers\ into\ default\ and\ custom\ capacity\ cars.\r\n\ Test\ 5)\ adding\ passengers\ beyond\ capacity\ [fails]\r\n
comment8.params=
comment8.target=void\ testGetPassengers01()
comment8.text=\r\n\ Tests\ that\ passengers\ can\ be\ retrieved.\r\n\ Test\ 1)\ no\ passengers\ when\ adding\ a\ "null"\ passenger\r\n
comment9.params=
comment9.target=void\ testGetPassengers02()
comment9.text=\r\n\ Tests\ that\ passengers\ can\ be\ retrieved.\r\n\ Test\ 2)\ one\ passenger\ when\ adding\ one\ passenger\ when\ empty\r\n
numComments=43
